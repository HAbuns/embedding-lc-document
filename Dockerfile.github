# Dockerfile for Corporate/Offline Streamlit Document Search App
# NO transformers, NO huggingface-hub - fully offline operation
# Perfect for corporate environments with restricted internet access

FROM python:3.13-slim

# Set working directory
WORKDIR /app

# Set environment variables for offline mode
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    TRANSFORMERS_OFFLINE=1 \
    HF_HUB_OFFLINE=1 \
    OFFLINE_MODE=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements for offline environment (NO transformers/huggingface)
COPY requirements_docker.txt .

# Install Python dependencies (minimal set - no AI libraries)
RUN pip install --no-cache-dir -r requirements_docker.txt

# Create necessary directories
RUN mkdir -p /app/embeddings /app/documents

# Copy application code - Pure offline version
COPY pure_offline_search.py .
COPY streamlit_app_offline.py .
COPY similarity_methods.py .
COPY embeddings/ ./embeddings/
COPY document/ ./document/

# Copy any other necessary files
COPY *.json ./
COPY *.py ./

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash app \
    && chown -R app:app /app
USER app

# Expose Streamlit port
EXPOSE 8501

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8501/_stcore/health || exit 1

# Run the offline application
CMD ["streamlit", "run", "streamlit_app_offline.py", "--server.port=8501", "--server.address=0.0.0.0", "--server.headless=true", "--server.enableCORS=false", "--server.enableXsrfProtection=false"]