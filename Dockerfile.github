# Dockerfile for Corporate/Offline Streamlit Document Search App
# Optimized for corporate networks with proxy/firewall restrictions
# Ultra-minimal dependencies for maximum compatibility

FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Set environment variables for offline mode
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    TRANSFORMERS_OFFLINE=1 \
    HF_HUB_OFFLINE=1 \
    OFFLINE_MODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies with corporate network compatibility
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy requirements for offline environment (NO AI libraries)
COPY requirements_docker.txt .

# Install Python dependencies with corporate network handling
# Use multiple strategies for corporate environments
RUN pip install --no-cache-dir --timeout=1000 --retries=5 \
    --trusted-host pypi.org \
    --trusted-host pypi.python.org \
    --trusted-host files.pythonhosted.org \
    -r requirements_docker.txt || \
    pip install --no-cache-dir --no-deps \
    streamlit numpy pandas scikit-learn plotly Pillow requests PyPDF2

# Create necessary directories
RUN mkdir -p /app/embeddings /app/documents

# Copy application code - Pure offline version
COPY pure_offline_search.py .
COPY main_app.py .
COPY similarity_methods.py .
COPY embeddings/ ./embeddings/
COPY document/ ./document/

# Copy any other necessary files
COPY *.json ./
COPY *.py ./

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash app \
    && chown -R app:app /app
USER app

# Expose Streamlit port
EXPOSE 8501

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8501/_stcore/health || exit 1

# Run the offline application
CMD ["streamlit", "run", "main_app.py", "--server.port=8501", "--server.address=0.0.0.0", "--server.headless=true", "--server.enableCORS=false", "--server.enableXsrfProtection=false"]